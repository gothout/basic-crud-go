definitions:
  dto.CreateEnterpriseDTO:
    properties:
      cnpj:
        type: string
      name:
        type: string
    required:
    - cnpj
    - name
    type: object
  dto.CreateEnterpriseResponse:
    properties:
      cnpj:
        type: string
      createdAt:
        type: string
      name:
        type: string
    type: object
  dto.ReadEnterpriseResponse:
    properties:
      cnpj:
        type: string
      createdAt:
        type: string
      name:
        type: string
      updatedAt:
        type: string
    type: object
  dto.ReadEnterprisesResponse:
    properties:
      enterprises:
        items:
          $ref: '#/definitions/dto.ReadEnterpriseResponse'
        type: array
      limit:
        type: integer
      page:
        type: integer
      total:
        type: integer
    type: object
  dto.UpdateEnterpriseDTO:
    properties:
      cnpj:
        type: string
      newCnpj:
        type: string
      newName:
        type: string
    required:
    - cnpj
    type: object
  dto.UpdateEnterpriseResponse:
    properties:
      newCnpj:
        type: string
      newName:
        type: string
      oldCnpj:
        type: string
      updatedAt:
        type: string
    type: object
  rest_err.Causes:
    properties:
      field:
        type: string
      message:
        type: string
    type: object
  rest_err.RestErr:
    properties:
      causes:
        items:
          $ref: '#/definitions/rest_err.Causes'
        type: array
      code:
        type: integer
      error:
        type: string
      message:
        type: string
    type: object
info:
  contact: {}
  description: API administrativa generica para um Basic Crud
  title: Basic Crud
  version: "1.0"
paths:
  /enterprise/v1/create:
    post:
      consumes:
      - application/json
      description: Create enterprise by CNPJ and name
      parameters:
      - description: Company data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreateEnterpriseDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.CreateEnterpriseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest_err.RestErr'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/rest_err.RestErr'
      summary: Create enterprise
      tags:
      - Enterprise
  /enterprise/v1/ping:
    get:
      description: Retorna um pong para verificar se o serviço enterprise está ativo
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Healthcheck do Enterprise
      tags:
      - Enterprise
  /enterprise/v1/read:
    get:
      consumes:
      - application/json
      description: Retrieve a paginated list of enterprises
      parameters:
      - description: Page number (min 1)
        in: query
        name: page
        type: integer
      - description: 'Items per page (default: 10)'
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ReadEnterprisesResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest_err.RestErr'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/rest_err.RestErr'
      summary: List enterprises
      tags:
      - Enterprise
  /enterprise/v1/read/{cnpj}:
    get:
      consumes:
      - application/json
      description: Read enterprise by CNPJ
      parameters:
      - description: CNPJ of the enterprise
        in: path
        name: cnpj
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ReadEnterpriseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest_err.RestErr'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/rest_err.RestErr'
      summary: Read enterprise
      tags:
      - Enterprise
  /enterprise/v1/update:
    put:
      consumes:
      - application/json
      description: Update enterprise by CNPJ
      parameters:
      - description: Company data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateEnterpriseDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UpdateEnterpriseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest_err.RestErr'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/rest_err.RestErr'
      summary: Update enterprise
      tags:
      - Enterprise
  /user/v1/ping:
    get:
      description: Retorna um pong para verificar se o serviço User está ativo
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Healthcheck do User
      tags:
      - User
swagger: "2.0"
